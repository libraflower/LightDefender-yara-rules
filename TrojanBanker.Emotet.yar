rule win_emotet_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2020-12-22"
        version = "1"
        description = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.emotet"
        malpedia_rule_date = "20201222"
        malpedia_hash = "30354d830a29f0fbd3714d93d94dea941d77a130"
        malpedia_version = "20201023"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 3903 5f 5e 0f95c0 5b 8be5 }
            // n = 6, score = 2400
            //   3903                 | cmp                 dword ptr [ebx], eax
            //   5f                   | pop                 edi
            //   5e                   | pop                 esi
            //   0f95c0               | setne               al
            //   5b                   | pop                 ebx
            //   8be5                 | mov                 esp, ebp

        $sequence_1 = { 0fb7c0 83c020 eb03 0fb7c0 69d23f000100 }
            // n = 5, score = 2300
            //   0fb7c0               | movzx               eax, ax
            //   83c020               | add                 eax, 0x20
            //   eb03                 | jmp                 5
            //   0fb7c0               | movzx               eax, ax
            //   69d23f000100         | imul                edx, edx, 0x1003f

        $sequence_2 = { 8d5801 f6c30f 7406 83e3f0 }
            // n = 4, score = 2000
            //   8d5801               | lea                 ebx, [eax + 1]
            //   f6c30f               | test                bl, 0xf
            //   7406                 | je                  8
            //   83e3f0               | and                 ebx, 0xfffffff0

        $sequence_3 = { 2b4770 8901 8b477c 85c0 7448 8b00 2b878c000000 }
            // n = 7, score = 1900
            //   2b4770               | sub                 eax, dword ptr [edi + 0x70]
            //   8901                 | mov                 dword ptr [ecx], eax
            //   8b477c               | mov                 eax, dword ptr [edi + 0x7c]
            //   85c0                 | test                eax, eax
            //   7448                 | je                  0x4a
            //   8b00                 | mov                 eax, dword ptr [eax]
            //   2b878c000000         | sub                 eax, dword ptr [edi + 0x8c]

        $sequence_4 = { 3c30 7c04 3c39 7e13 3c61 7c04 }
            // n = 6, score = 1900
            //   3c30                 | cmp                 al, 0x30
            //   7c04                 | jl                  6
            //   3c39                 | cmp                 al, 0x39
            //   7e13                 | jle                 0x15
            //   3c61                 | cmp                 al, 0x61
            //   7c04                 | jl                  6

        $sequence_5 = { 7c04 3c5a 7e03 c60158 41 }
            // n = 5, score = 1900
            //   7c04                 | jl                  6
            //   3c5a                 | cmp                 al, 0x5a
            //   7e03                 | jle                 5
            //   c60158               | mov                 byte ptr [ecx], 0x58
            //   41                   | inc                 ecx

        $sequence_6 = { 7e13 3c61 7c04 3c7a 7e0b 3c41 }
            // n = 6, score = 1900
            //   7e13                 | jle                 0x15
            //   3c61                 | cmp                 al, 0x61
            //   7c04                 | jl                  6
            //   3c7a                 | cmp                 al, 0x7a
            //   7e0b                 | jle                 0xd
            //   3c41                 | cmp                 al, 0x41

        $sequence_7 = { 8bfa 8bf1 ff15???????? 8b17 }
            // n = 4, score = 1900
            //   8bfa                 | mov                 edi, edx
            //   8bf1                 | mov                 esi, ecx
            //   ff15????????         |                     
            //   8b17                 | mov                 edx, dword ptr [edi]

        $sequence_8 = { 03878c000000 50 ff15???????? 017758 83c40c 29775c }
            // n = 6, score = 1900
            //   03878c000000         | add                 eax, dword ptr [edi + 0x8c]
            //   50                   | push                eax
            //   ff15????????         |                     
            //   017758               | add                 dword ptr [edi + 0x58], esi
            //   83c40c               | add                 esp, 0xc
            //   29775c               | sub                 dword ptr [edi + 0x5c], esi

        $sequence_9 = { 56 57 8b780c 8bd9 83c70c 8b37 }
            // n = 6, score = 1900
            //   56                   | push                esi
            //   57                   | push                edi
            //   8b780c               | mov                 edi, dword ptr [eax + 0xc]
            //   8bd9                 | mov                 ebx, ecx
            //   83c70c               | add                 edi, 0xc
            //   8b37                 | mov                 esi, dword ptr [edi]

        $sequence_10 = { 894dcc 8d4dc8 8945c8 8975d4 }
            // n = 4, score = 1900
            //   894dcc               | mov                 dword ptr [ebp - 0x34], ecx
            //   8d4dc8               | lea                 ecx, [ebp - 0x38]
            //   8945c8               | mov                 dword ptr [ebp - 0x38], eax
            //   8975d4               | mov                 dword ptr [ebp - 0x2c], esi

        $sequence_11 = { 8bf9 8b4f78 85c9 740b 8b8784000000 2b4770 }
            // n = 6, score = 1900
            //   8bf9                 | mov                 edi, ecx
            //   8b4f78               | mov                 ecx, dword ptr [edi + 0x78]
            //   85c9                 | test                ecx, ecx
            //   740b                 | je                  0xd
            //   8b8784000000         | mov                 eax, dword ptr [edi + 0x84]
            //   2b4770               | sub                 eax, dword ptr [edi + 0x70]

        $sequence_12 = { 8b4604 8b16 8945fc 8d45f8 6a04 }
            // n = 5, score = 1900
            //   8b4604               | mov                 eax, dword ptr [esi + 4]
            //   8b16                 | mov                 edx, dword ptr [esi]
            //   8945fc               | mov                 dword ptr [ebp - 4], eax
            //   8d45f8               | lea                 eax, [ebp - 8]
            //   6a04                 | push                4

        $sequence_13 = { 50 8d45f8 81ca00000020 50 }
            // n = 4, score = 1800
            //   50                   | push                eax
            //   8d45f8               | lea                 eax, [ebp - 8]
            //   81ca00000020         | or                  edx, 0x20000000
            //   50                   | push                eax

        $sequence_14 = { 81ca00000020 50 52 51 }
            // n = 4, score = 1800
            //   81ca00000020         | or                  edx, 0x20000000
            //   50                   | push                eax
            //   52                   | push                edx
            //   51                   | push                ecx

        $sequence_15 = { c60158 41 803900 75dd }
            // n = 4, score = 1600
            //   c60158               | mov                 byte ptr [ecx], 0x58
            //   41                   | inc                 ecx
            //   803900               | cmp                 byte ptr [ecx], 0
            //   75dd                 | jne                 0xffffffdf

        $sequence_16 = { c1e807 46 83f87f 77f7 }
            // n = 4, score = 1600
            //   c1e807               | shr                 eax, 7
            //   46                   | inc                 esi
            //   83f87f               | cmp                 eax, 0x7f
            //   77f7                 | ja                  0xfffffff9

        $sequence_17 = { 5e 5b c3 8b4618 ebf7 55 }
            // n = 6, score = 1300
            //   5e                   | pop                 esi
            //   5b                   | pop                 ebx
            //   c3                   | ret                 
            //   8b4618               | mov                 eax, dword ptr [esi + 0x18]
            //   ebf7                 | jmp                 0xfffffff9
            //   55                   | push                ebp

        $sequence_18 = { 7907 83c107 3bf7 72e8 }
            // n = 4, score = 1200
            //   7907                 | jns                 9
            //   83c107               | add                 ecx, 7
            //   3bf7                 | cmp                 esi, edi
            //   72e8                 | jb                  0xffffffea

        $sequence_19 = { 894e04 8b00 85c0 75f4 }
            // n = 4, score = 1200
            //   894e04               | mov                 dword ptr [esi + 4], ecx
            //   8b00                 | mov                 eax, dword ptr [eax]
            //   85c0                 | test                eax, eax
            //   75f4                 | jne                 0xfffffff6

        $sequence_20 = { 52 52 52 68???????? 52 }
            // n = 5, score = 1100
            //   52                   | push                edx
            //   52                   | push                edx
            //   52                   | push                edx
            //   68????????           |                     
            //   52                   | push                edx

        $sequence_21 = { 83ec48 53 56 57 6a44 }
            // n = 5, score = 1100
            //   83ec48               | sub                 esp, 0x48
            //   53                   | push                ebx
            //   56                   | push                esi
            //   57                   | push                edi
            //   6a44                 | push                0x44

        $sequence_22 = { 0fb70a 8bc1 81e100f00000 25ff0f0000 }
            // n = 4, score = 1000
            //   0fb70a               | movzx               ecx, word ptr [edx]
            //   8bc1                 | mov                 eax, ecx
            //   81e100f00000         | and                 ecx, 0xf000
            //   25ff0f0000           | and                 eax, 0xfff

        $sequence_23 = { 83f87f 760d 8d642400 c1e807 }
            // n = 4, score = 1000
            //   83f87f               | cmp                 eax, 0x7f
            //   760d                 | jbe                 0xf
            //   8d642400             | lea                 esp, [esp]
            //   c1e807               | shr                 eax, 7

        $sequence_24 = { 7609 c1e807 41 83f87f }
            // n = 4, score = 900
            //   7609                 | jbe                 0xb
            //   c1e807               | shr                 eax, 7
            //   41                   | inc                 ecx
            //   83f87f               | cmp                 eax, 0x7f

        $sequence_25 = { b901000000 83f87f 7609 c1e807 }
            // n = 4, score = 900
            //   b901000000           | mov                 ecx, 1
            //   83f87f               | cmp                 eax, 0x7f
            //   7609                 | jbe                 0xb
            //   c1e807               | shr                 eax, 7

        $sequence_26 = { 8b5d08 b8afa96e5e 56 57 }
            // n = 4, score = 800
            //   8b5d08               | mov                 ebx, dword ptr [ebp + 8]
            //   b8afa96e5e           | mov                 eax, 0x5e6ea9af
            //   56                   | push                esi
            //   57                   | push                edi

        $sequence_27 = { 6a00 6aff 50 51 ff15???????? }
            // n = 5, score = 800
            //   6a00                 | push                0
            //   6aff                 | push                -1
            //   50                   | push                eax
            //   51                   | push                ecx
            //   ff15????????         |                     

        $sequence_28 = { 8bf0 e8???????? 8bf8 e8???????? 2bf8 33d2 }
            // n = 6, score = 800
            //   8bf0                 | mov                 esi, eax
            //   e8????????           |                     
            //   8bf8                 | mov                 edi, eax
            //   e8????????           |                     
            //   2bf8                 | sub                 edi, eax
            //   33d2                 | xor                 edx, edx

        $sequence_29 = { 50 6a00 6a01 6a00 ff15???????? a3???????? }
            // n = 6, score = 800
            //   50                   | push                eax
            //   6a00                 | push                0
            //   6a01                 | push                1
            //   6a00                 | push                0
            //   ff15????????         |                     
            //   a3????????           |                     

        $sequence_30 = { 84c0 75f2 eb03 c60200 }
            // n = 4, score = 800
            //   84c0                 | test                al, al
            //   75f2                 | jne                 0xfffffff4
            //   eb03                 | jmp                 5
            //   c60200               | mov                 byte ptr [edx], 0

        $sequence_31 = { 55 8bec 83ec14 53 8b5d08 b8afa96e5e }
            // n = 6, score = 700
            //   55                   | push                ebp
            //   8bec                 | mov                 ebp, esp
            //   83ec14               | sub                 esp, 0x14
            //   53                   | push                ebx
            //   8b5d08               | mov                 ebx, dword ptr [ebp + 8]
            //   b8afa96e5e           | mov                 eax, 0x5e6ea9af

        $sequence_32 = { 50 6a00 ff75fc 6800040000 }
            // n = 4, score = 600
            //   50                   | push                eax
            //   6a00                 | push                0
            //   ff75fc               | push                dword ptr [ebp - 4]
            //   6800040000           | push                0x400

        $sequence_33 = { 50 56 6800800000 6a6a }
            // n = 4, score = 600
            //   50                   | push                eax
            //   56                   | push                esi
            //   6800800000           | push                0x8000
            //   6a6a                 | push                0x6a

        $sequence_34 = { ff75fc 6800040000 6a00 6a00 }
            // n = 4, score = 600
            //   ff75fc               | push                dword ptr [ebp - 4]
            //   6800040000           | push                0x400
            //   6a00                 | push                0
            //   6a00                 | push                0

        $sequence_35 = { 56 68400000f0 6a18 33f6 }
            // n = 4, score = 600
            //   56                   | push                esi
            //   68400000f0           | push                0xf0000040
            //   6a18                 | push                0x18
            //   33f6                 | xor                 esi, esi

        $sequence_36 = { 53 56 8bf1 bb00c34c84 }
            // n = 4, score = 600
            //   53                   | push                ebx
            //   56                   | push                esi
            //   8bf1                 | mov                 esi, ecx
            //   bb00c34c84           | mov                 ebx, 0x844cc300

        $sequence_37 = { 83ec10 53 6a00 8d45fc }
            // n = 4, score = 500
            //   83ec10               | sub                 esp, 0x10
            //   53                   | push                ebx
            //   6a00                 | push                0
            //   8d45fc               | lea                 eax, [ebp - 4]

        $sequence_38 = { 8b8880000000 8b55f4 01ca 89d6 }
            // n = 4, score = 500
            //   8b8880000000         | mov                 ecx, dword ptr [eax + 0x80]
            //   8b55f4               | mov                 edx, dword ptr [ebp - 0xc]
            //   01ca                 | add                 edx, ecx
            //   89d6                 | mov                 esi, edx

        $sequence_39 = { 01ca 89d6 83c604 8b7de0 8b4c0f04 83f900 }
            // n = 6, score = 500
            //   01ca                 | add                 edx, ecx
            //   89d6                 | mov                 esi, edx
            //   83c604               | add                 esi, 4
            //   8b7de0               | mov                 edi, dword ptr [ebp - 0x20]
            //   8b4c0f04             | mov                 ecx, dword ptr [edi + ecx + 4]
            //   83f900               | cmp                 ecx, 0

        $sequence_40 = { 8d0492 89ca 29c2 89d0 }
            // n = 4, score = 500
            //   8d0492               | lea                 eax, [edx + edx*4]
            //   89ca                 | mov                 edx, ecx
            //   29c2                 | sub                 edx, eax
            //   89d0                 | mov                 eax, edx

        $sequence_41 = { 8bf1 bb00c34c84 57 33ff }
            // n = 4, score = 500
            //   8bf1                 | mov                 esi, ecx
            //   bb00c34c84           | mov                 ebx, 0x844cc300
            //   57                   | push                edi
            //   33ff                 | xor                 edi, edi

        $sequence_42 = { 51 52 01c8 01d0 50 e8???????? 5a }
            // n = 7, score = 500
            //   51                   | push                ecx
            //   52                   | push                edx
            //   01c8                 | add                 eax, ecx
            //   01d0                 | add                 eax, edx
            //   50                   | push                eax
            //   e8????????           |                     
            //   5a                   | pop                 edx

        $sequence_43 = { 6a00 6a00 ff7508 53 50 }
            // n = 5, score = 500
            //   6a00                 | push                0
            //   6a00                 | push                0
            //   ff7508               | push                dword ptr [ebp + 8]
            //   53                   | push                ebx
            //   50                   | push                eax

        $sequence_44 = { 8b4130 83b8a400000006 0f92c2 80e201 }
            // n = 4, score = 500
            //   8b4130               | mov                 eax, dword ptr [ecx + 0x30]
            //   83b8a400000006       | cmp                 dword ptr [eax + 0xa4], 6
            //   0f92c2               | setb                dl
            //   80e201               | and                 dl, 1

        $sequence_45 = { 83fe00 8945f0 894dec 8955e8 8975e4 897de0 }
            // n = 6, score = 500
            //   83fe00               | cmp                 esi, 0
            //   8945f0               | mov                 dword ptr [ebp - 0x10], eax
            //   894dec               | mov                 dword ptr [ebp - 0x14], ecx
            //   8955e8               | mov                 dword ptr [ebp - 0x18], edx
            //   8975e4               | mov                 dword ptr [ebp - 0x1c], esi
            //   897de0               | mov                 dword ptr [ebp - 0x20], edi

        $sequence_46 = { 8b7020 8b7840 89c3 83c33c }
            // n = 4, score = 300
            //   8b7020               | mov                 esi, dword ptr [eax + 0x20]
            //   8b7840               | mov                 edi, dword ptr [eax + 0x40]
            //   89c3                 | mov                 ebx, eax
            //   83c33c               | add                 ebx, 0x3c

        $sequence_47 = { 89e2 31f6 89720c 897208 897204 }
            // n = 5, score = 200
            //   89e2                 | mov                 edx, esp
            //   31f6                 | xor                 esi, esi
            //   89720c               | mov                 dword ptr [edx + 0xc], esi
            //   897208               | mov                 dword ptr [edx + 8], esi
            //   897204               | mov                 dword ptr [edx + 4], esi

        $sequence_48 = { 0fb6b62043e601 ff24b50443e601 884801 80ca04 eb26 884801 }
            // n = 6, score = 100
            //   0fb6b62043e601       | movzx               esi, byte ptr [esi + 0x1e64320]
            //   ff24b50443e601       | jmp                 dword ptr [esi*4 + 0x1e64304]
            //   884801               | mov                 byte ptr [eax + 1], cl
            //   80ca04               | or                  dl, 4
            //   eb26                 | jmp                 0x28
            //   884801               | mov                 byte ptr [eax + 1], cl

        $sequence_49 = { e8???????? b902000000 c7042402000000 89442440 894c243c e8???????? dd5c2448 }
            // n = 7, score = 100
            //   e8????????           |                     
            //   b902000000           | mov                 ecx, 2
            //   c7042402000000       | mov                 dword ptr [esp], 2
            //   89442440             | mov                 dword ptr [esp + 0x40], eax
            //   894c243c             | mov                 dword ptr [esp + 0x3c], ecx
            //   e8????????           |                     
            //   dd5c2448             | fstp                qword ptr [esp + 0x48]

        $sequence_50 = { 89e8 894c247c 8b8c2480000000 01c8 83c1c0 81f9c00f0000 8b4c247c }
            // n = 7, score = 100
            //   89e8                 | mov                 eax, ebp
            //   894c247c             | mov                 dword ptr [esp + 0x7c], ecx
            //   8b8c2480000000       | mov                 ecx, dword ptr [esp + 0x80]
            //   01c8                 | add                 eax, ecx
            //   83c1c0               | add                 ecx, -0x40
            //   81f9c00f0000         | cmp                 ecx, 0xfc0
            //   8b4c247c             | mov                 ecx, dword ptr [esp + 0x7c]

        $sequence_51 = { 4c 8d05ce3f0000 89442420 ff15???????? }
            // n = 4, score = 100
            //   4c                   | dec                 esp
            //   8d05ce3f0000         | lea                 eax, [0x3fce]
            //   89442420             | mov                 dword ptr [esp + 0x20], eax
            //   ff15????????         |                     

        $sequence_52 = { e8???????? 8d0df630d800 890424 894c2404 }
            // n = 4, score = 100
            //   e8????????           |                     
            //   8d0df630d800         | lea                 ecx, [0xd830f6]
            //   890424               | mov                 dword ptr [esp], eax
            //   894c2404             | mov                 dword ptr [esp + 4], ecx

        $sequence_53 = { f20f2ac2 89e2 f20f1102 89442444 }
            // n = 4, score = 100
            //   f20f2ac2             | cvtsi2sd            xmm0, edx
            //   89e2                 | mov                 edx, esp
            //   f20f1102             | movsd               qword ptr [edx], xmm0
            //   89442444             | mov                 dword ptr [esp + 0x44], eax

        $sequence_54 = { 8d151f250000 89442428 41 b901000000 45 33c0 }
            // n = 6, score = 100
            //   8d151f250000         | lea                 edx, [0x251f]
            //   89442428             | mov                 dword ptr [esp + 0x28], eax
            //   41                   | inc                 ecx
            //   b901000000           | mov                 ecx, 1
            //   45                   | inc                 ebp
            //   33c0                 | xor                 eax, eax

        $sequence_55 = { 8bce 8bf8 e8???????? eb04 8b7c2430 48 85ed }
            // n = 7, score = 100
            //   8bce                 | mov                 ecx, esi
            //   8bf8                 | mov                 edi, eax
            //   e8????????           |                     
            //   eb04                 | jmp                 6
            //   8b7c2430             | mov                 edi, dword ptr [esp + 0x30]
            //   48                   | dec                 eax
            //   85ed                 | test                ebp, ebp

        $sequence_56 = { 4c 8d0540250000 48 8d4c2420 8d5014 }
            // n = 5, score = 100
            //   4c                   | dec                 esp
            //   8d0540250000         | lea                 eax, [0x2540]
            //   48                   | dec                 eax
            //   8d4c2420             | lea                 ecx, [esp + 0x20]
            //   8d5014               | lea                 edx, [eax + 0x14]

        $sequence_57 = { 8bd9 48 8d152c1b0000 48 8bce e8???????? }
            // n = 6, score = 100
            //   8bd9                 | mov                 ebx, ecx
            //   48                   | dec                 eax
            //   8d152c1b0000         | lea                 edx, [0x1b2c]
            //   48                   | dec                 eax
            //   8bce                 | mov                 ecx, esi
            //   e8????????           |                     

        $sequence_58 = { 8bf8 8bc6 e8???????? eb03 8b7d10 8b4508 }
            // n = 6, score = 100
            //   8bf8                 | mov                 edi, eax
            //   8bc6                 | mov                 eax, esi
            //   e8????????           |                     
            //   eb03                 | jmp                 5
            //   8b7d10               | mov                 edi, dword ptr [ebp + 0x10]
            //   8b4508               | mov                 eax, dword ptr [ebp + 8]

        $sequence_59 = { f20f1005???????? 0f28c8 8b4c247c 660f6ed1 660febd1 f20f5cd0 }
            // n = 6, score = 100
            //   f20f1005????????     |                     
            //   0f28c8               | movaps              xmm1, xmm0
            //   8b4c247c             | mov                 ecx, dword ptr [esp + 0x7c]
            //   660f6ed1             | movd                xmm2, ecx
            //   660febd1             | por                 xmm2, xmm1
            //   f20f5cd0             | subsd               xmm2, xmm0

        $sequence_60 = { f20f11942480000000 f20f114c2458 89442454 0f84fcfeffff }
            // n = 4, score = 100
            //   f20f11942480000000     | movsd    qword ptr [esp + 0x80], xmm2
            //   f20f114c2458         | movsd               qword ptr [esp + 0x58], xmm1
            //   89442454             | mov                 dword ptr [esp + 0x54], eax
            //   0f84fcfeffff         | je                  0xffffff02

        $sequence_61 = { 885df9 84db 741a 0fb6b63091e601 }
            // n = 4, score = 100
            //   885df9               | mov                 byte ptr [ebp - 7], bl
            //   84db                 | test                bl, bl
            //   741a                 | je                  0x1c
            //   0fb6b63091e601       | movzx               esi, byte ptr [esi + 0x1e69130]

    condition:
        7 of them and filesize < 253952
}

rule win_emotet_w0 {
    meta:
        author = "press inquiries <info@bka.de>, technical contact <info@mha.bka.de>"
        source = "https://www.bka.de/DE/IhreSicherheit/RichtigesVerhalten/StraftatenImInternet/FAQ/FAQ_node.html"
        description = "The modified emotet binary replaces the original emotet on the system of the victim. The original emotet is copied to a quarantine for evidence-preservation."
        note = "The quarantine folder depends on the scope of the initial emotet infection (user or administrator). It is the temporary folder as returned by GetTempPathW under a filename starting with UDP as returned by GetTempFileNameW. To prevent accidental reinfection by a user, the quarantined emotet is encrypted using RC4 and a 0x20 bytes long key found at the start of the quarantined file (see $key)."
        sharing = "TLP:WHITE"
        version = "20210323"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.emotet"
        malpedia_rule_date = "20210421"
        malpedia_hash = ""
        malpedia_version = "20210421"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"
    strings:
        $key = { c3 da da 19 63 45 2c 86 77 3b e9 fd 24 64 fb b8 07 fe 12 d0 2a 48 13 38 48 68 e8 ae 91 3c ed 82 }
    condition:
        $key at 0
}

rule win_emotet_w1 {
    meta:
        author = "press inquiries <info@bka.de>, technical contact <info@mha.bka.de>"
        source = "https://www.bka.de/DE/IhreSicherheit/RichtigesVerhalten/StraftatenImInternet/FAQ/FAQ_node.html"
        description = "This rule targets a modified emotet binary deployed by the Bundeskriminalamt on the 26th of January 2021."
        note = "The binary will replace the original emotet by copying it to a quarantine. It also contains a routine to perform a self-deinstallation on the 25th of April 2021. The three-month timeframe between rollout and self- deinstallation was chosen primarily for evidence purposes as well as to allow remediation."
        sharing = "TLP:WHITE"
        version = "20210323"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.emotet"
        malpedia_rule_date = "20210421"
        malpedia_hash = ""
        malpedia_version = "20210421"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"
    strings:
        $key = { c3 da da 19 63 45 2c 86 77 3b e9 fd 24 64 fb b8 07 fe 12 d0 2a 48 13 38 48 68 e8 ae 91 3c ed 82 }
    condition:
        filesize >  300KB and
        filesize < 700KB and
        uint16(0) == 0x5A4D and
        $key
}

rule Emotet {
          meta:
            description = "detect Emotet in memory"
            author = "JPCERT/CC Incident Response Group"
            rule_usage = "memory scan"
            reference = "internal research"

          strings:
            $v4a = { BB 00 C3 4C 84 }
            $v4b = { B8 00 C3 CC 84 }
            $v5a = { 69 01 6D 4E C6 41 05 39 30 00 00 }
            $v5b = { 6D 4E C6 41 33 D2 81 C1 39 30 00 00 }
            $v6a = { C7 40 20 ?? ?? ?? 00 C7 40 10 ?? ?? ?? 00 C7 40 0C 00 00 00 00 83 3C CD ?? ?? ?? ?? 00 74 0E 41 89 48 ?? 83 3C CD ?? ?? ?? ?? 00 75 F2 }
            $v7a = { 6A 06 33 D2 ?? F7 ?? 8B DA 43 74 }
            $v7b = { 83 E6 0F 8B CF 83 C6 04 50 8B D6 E8 ?? ?? ?? ?? 59 6A 2F 8D 3C 77 58 66 89 07 83 C7 02 4B 75 }

          condition: all of ($v4*) or $v5a or $v5b or $v6a or all of ($v7*)
}

rule Emotet_epoch5 {
   meta:
      description = "TrojanBanker.Emotet"
      author = "LightDefender"
      date = "2021-11-20"
      hash1 = "1f565ad47dd6520e252a7256073fc053d0cbbeedcc1612d49c097b1288221569"
      hash2 = "439e287370b5033265cedd5ac7db241b392338863db741282609b62adc1abe2f"
      hash3 = "4ca7f800e9cb0ea01f9bfccbfa5a122e8c7a0d1a03b7536d82e0c38c80fa52bc"
      hash4 = "688d4033139158dc68ac3835ff5013cf8ae240d685b2c8a3caeb2d18c85feb9b"
      hash5 = "a7343086d72f81f91cedc05d88b11cf44ba5da9ac6c25983870f3a77f854f4e9"
      hash6 = "c360f3d22b53da4a7d9b7bf061867c2a3f95120035b946cfe709b3a3743258d8"
      hash7 = "c3895b6c3c964ba758a478b0d6d84c5c4205bd18372b0cd055f07f90116d6342"
      hash8 = "cd56e26da71e89243b2bfe42b71c0b139f53508067c5796885104a8d287d0c7b"
   strings:
      $s1 = "tpvsferdl4.dll" fullword ascii
      $s2 = "showing his face, and shaking his head, and rubbing his hands." fullword ascii
      $s3 = "Successful endinging - " fullword ascii
      $s4 = "Init state ending - Ok." fullword ascii
      $s5 = "Pressure or more is turned on, the temperature inside reaching." fullword ascii
      $s6 = "from small units to huge ones made to accommodate " fullword ascii
      $s7 = "Segment to search for extremes" fullword ascii
      $s8 = "1.2 * x - 3" fullword ascii
      $s9 = "he rules the ciphering-book, and now he throws his eyes sideways." fullword ascii
      $s10 = ".?AVLogFunc@@" fullword ascii
      $s11 = "1 / (2 * sqrt(x))" fullword ascii
      $s12 = "He was as good as his word, if that were all right which I had a secret misgiving was nearly ." fullword ascii
      $s13 = "Being discovered in tears, instead of cheers, on account." fullword ascii
      $s14 = ".  Last error = " fullword ascii
      $s15 = "An error occurred writing to the file" fullword ascii
   condition:
      ( uint16(0) == 0x5a4d and ( 8 of them )
      ) or ( all of them )
}

rule Emotet_Nov_20 {
   meta:
      description = "TrojanBanker.Emotet"
      author = "LightDefender"
      date = "2021-11-20"
      hash1 = "0062304503f928e8bb0e8bf3fe2466bb4fe26050bf658cf11b4c91019ddf3c3d"
      hash2 = "01108f7dec8564e4f130d0b3e49b5e30c08bcdfcf1e75723cddce7494c5f8db7"
      hash3 = "067f4553e9455d958d1c231e6d9c199d6c0344f311eb0c38585d37be62178bff"
      hash4 = "10b1288d251250fda00e4a0ccfb8016eefe083b58c6b8e963be8b0761c5cdd15"
      hash5 = "12449bb00d21b4109606488d739abe928c168b7b8361c3d88bd6baf42cdeeb9c"
      hash6 = "142d330305cf2bba895b000b9c7c2da6c6b38cb728d3fb347da8dd9f0bed4845"
      hash7 = "1cee3d1ff9a6a532c096be8e058c7e173b98fa45fea3f734521ee11f98e6eafb"
      hash8 = "20385691b83c23010aff7923eafbd39d6fd3c9717982ba2d2478e6cbf5154fe7"
      hash9 = "207b6e0048c2cc9fb8373f0632fcd33675eb2a469e830a408929fcf73c2d8137"
      hash10 = "26dac81120fd574e8e1d26eaaabf95cc8b067143790fb74fc31742ae35201510"
      hash11 = "2da599dc3f8fa335ad0c11fe00adc820f97c8733b5fb6eedfde6e1fad6754113"
   strings:
      $s1 = "Performance Monitor - (Reload Configuration)" fullword wide
      $s2 = "Performance Monitor - (Edit Configuration)" fullword wide
      $s3 = "\\PerfmonBar\\config.xml" fullword wide
      $s4 = "        'ass.DLL'" fullword ascii
      $s5 = "perfbar" fullword ascii
      $s6 = ".?AV?$CComAggObject@VCPerfBar@@@ATL@@" fullword ascii
      $s7 = ".?AV?$IDispatchImpl@UIPerfBar@@$1?IID_IPerfBar@@3U_GUID@@B$1?LIBID_PerfmonBarLib@@3U3@B$00$0A@VCComTypeInfoHolder@ATL@@@ATL@@" fullword ascii
      $s8 = ".?AV?$CComContainedObject@VCPerfBar@@@ATL@@" fullword ascii
      $s9 = ".?AV?$CComObject@VCPerfBar@@@ATL@@" fullword ascii
      $op1 = {55 8B EC 83 EC 1C 53 56 8B F1 8B DA 89 5D F8 89 75 EC 8B 46 3C 8B 44 30 78 85 C0 75 06 5E 5B 8B}
   condition:
      uint16(0) == 0x5a4d and ( 6 of them or all of ($op*) )
}
