// Oski is an infostealer targeting browser data, crypto wallets.
rule Oski_Stealer
{
  meta: 
    author = "Ben Cohen, CyberArk"
    date = "04-08-2020"
    vesrion = "1.0"
    hash = "fef1b5c7c365e85c0d0cfb58674844bd12acfc5298f9ffc5722b832fc9a542d7"
    reference = "https://www.cyberark.com/resources/threat-research-blog/meet-oski-stealer-an-in-depth-analysis-of-the-popular-credential-stealer"
    description = "Yara rule for Oski Stealer v9+"
  
  strings:
    $s1 = "Software\\Microsoft\\Windows NT\\CurrentVersion\\Windows Messaging Subsystem\\Profiles\\Outlook"
    $s2 = { 53 6F 66 74 77 61 72 65 5C 4D 69 63 72 6F 73 6F 66 74 5C 4F 66 66 69 63 65 5C ?? ?? 2E 30 5C 4F 75 74 6C 6F 6F 6B 5C 50 72 6F 66 69 6C 65 73 5C 4F 75 74 6C 6F 6F 6B } // Software\Microsoft\Office\??.0\Outlook\Profiles\Outlook
    $s3 = "Software\\Microsoft\\Windows Messaging Subsystem\\Profiles"
    $s4 = "outlook.txt"
    $s5 = "Microsoft\\Edge\\User Data\\"
    $s6 = "Local State"
    $req_boundry = "1BEF0A57BE110FD467A"
    $decrypt_pattern = {A3 ?? ?? ?? ?? 68 ?? ?? ?? ?? E8 ?? ?? ?? ?? 83 C4 04}
    $PIC = {64 A1 30 00 00 00 8B 40 0C 8B 40 0C 8B 00 8B 00 8B 40 18 }

  condition:
    (2 of ($s*) or #decrypt_pattern > 200) and
    $PIC and
    $req_boundry and
    uint16(0) == 0x5A4D
}

rule win_oski_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2020-12-22"
        version = "1"
        description = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.oski"
        malpedia_rule_date = "20201222"
        malpedia_hash = "30354d830a29f0fbd3714d93d94dea941d77a130"
        malpedia_version = "20201023"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 25ff7f0000 c3 8bff 55 8bec 83ec14 ff7510 }
            // n = 7, score = 1000
            //   25ff7f0000           | and                 eax, 0x7fff
            //   c3                   | ret                 
            //   8bff                 | mov                 edi, edi
            //   55                   | push                ebp
            //   8bec                 | mov                 ebp, esp
            //   83ec14               | sub                 esp, 0x14
            //   ff7510               | push                dword ptr [ebp + 0x10]

        $sequence_1 = { 83c120 51 6a00 6a00 }
            // n = 4, score = 1000
            //   83c120               | add                 ecx, 0x20
            //   51                   | push                ecx
            //   6a00                 | push                0
            //   6a00                 | push                0

        $sequence_2 = { 8930 33c0 e9???????? 8bff 55 8bec 8b4508 }
            // n = 7, score = 1000
            //   8930                 | mov                 dword ptr [eax], esi
            //   33c0                 | xor                 eax, eax
            //   e9????????           |                     
            //   8bff                 | mov                 edi, edi
            //   55                   | push                ebp
            //   8bec                 | mov                 ebp, esp
            //   8b4508               | mov                 eax, dword ptr [ebp + 8]

        $sequence_3 = { 8975f0 e8???????? cc 8bff 55 8bec 8b550c }
            // n = 7, score = 900
            //   8975f0               | mov                 dword ptr [ebp - 0x10], esi
            //   e8????????           |                     
            //   cc                   | int3                
            //   8bff                 | mov                 edi, edi
            //   55                   | push                ebp
            //   8bec                 | mov                 ebp, esp
            //   8b550c               | mov                 edx, dword ptr [ebp + 0xc]

        $sequence_4 = { 50 a1???????? 50 8d8df0feffff 51 e8???????? }
            // n = 6, score = 900
            //   50                   | push                eax
            //   a1????????           |                     
            //   50                   | push                eax
            //   8d8df0feffff         | lea                 ecx, [ebp - 0x110]
            //   51                   | push                ecx
            //   e8????????           |                     

        $sequence_5 = { 83c40c e8???????? 50 a1???????? }
            // n = 4, score = 900
            //   83c40c               | add                 esp, 0xc
            //   e8????????           |                     
            //   50                   | push                eax
            //   a1????????           |                     

        $sequence_6 = { 50 8bc6 c745fc00000000 e8???????? 83c404 }
            // n = 5, score = 800
            //   50                   | push                eax
            //   8bc6                 | mov                 eax, esi
            //   c745fc00000000       | mov                 dword ptr [ebp - 4], 0
            //   e8????????           |                     
            //   83c404               | add                 esp, 4

        $sequence_7 = { 8dbd64fbffff e8???????? 85c0 0f85e8fbffff 8b5318 8bc3 }
            // n = 6, score = 800
            //   8dbd64fbffff         | lea                 edi, [ebp - 0x49c]
            //   e8????????           |                     
            //   85c0                 | test                eax, eax
            //   0f85e8fbffff         | jne                 0xfffffbee
            //   8b5318               | mov                 edx, dword ptr [ebx + 0x18]
            //   8bc3                 | mov                 eax, ebx

        $sequence_8 = { 52 6804010000 ff15???????? 6a00 }
            // n = 4, score = 300
            //   52                   | push                edx
            //   6804010000           | push                0x104
            //   ff15????????         |                     
            //   6a00                 | push                0

        $sequence_9 = { 6a01 6800000040 8b5508 52 ff15???????? 8945f8 }
            // n = 6, score = 200
            //   6a01                 | push                1
            //   6800000040           | push                0x40000000
            //   8b5508               | mov                 edx, dword ptr [ebp + 8]
            //   52                   | push                edx
            //   ff15????????         |                     
            //   8945f8               | mov                 dword ptr [ebp - 8], eax

        $sequence_10 = { 6a01 8b8de0edffff 51 e8???????? 83c410 8b15???????? 52 }
            // n = 7, score = 200
            //   6a01                 | push                1
            //   8b8de0edffff         | mov                 ecx, dword ptr [ebp - 0x1220]
            //   51                   | push                ecx
            //   e8????????           |                     
            //   83c410               | add                 esp, 0x10
            //   8b15????????         |                     
            //   52                   | push                edx

        $sequence_11 = { 51 ff15???????? eb1e 33d2 8b85c4fdffff 8910 8b0d???????? }
            // n = 7, score = 200
            //   51                   | push                ecx
            //   ff15????????         |                     
            //   eb1e                 | jmp                 0x20
            //   33d2                 | xor                 edx, edx
            //   8b85c4fdffff         | mov                 eax, dword ptr [ebp - 0x23c]
            //   8910                 | mov                 dword ptr [eax], edx
            //   8b0d????????         |                     

    condition:
        7 of them and filesize < 423936
}
