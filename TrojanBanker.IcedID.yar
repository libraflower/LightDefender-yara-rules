rule MALWARE_Win_IceID {
    meta:
        author = "ditekSHen"
        description = "Detects IceID / Bokbot variants"
    strings:
       $n1 = "POST" fullword wide
       $n2 = "; _gat=" fullword wide
       $n3 = "; _ga=" fullword wide
       $n4 = "; _u=" fullword wide
       $n5 = "; __io=" fullword wide
       $n6 = "; _gid=" fullword wide
       $n7 = "Cookie: __gads=" fullword wide
       $s1 = "c:\\ProgramData" ascii
       $s2 = "loader_dll_64.dll" fullword ascii
       $s3 = "loader_dll_32.dll" fullword ascii
       $s4 = "/?id=%0.2X%0.8X%0.8X%s" ascii
       $s5 = "%0.2X%0.2X%0.2X%0.2X%0.2X%0.2X%0.8X" ascii
    condition:
        uint16(0) == 0x5a4d and ((all of ($n*) and 1 of ($s*)) or (3 of ($s*) and 1 of ($n*)))
}

rule Malware_IcedID_July_22 {
   meta:
      author = "LightDefender"
      date = "2021-06-23"
   strings:
      $op1 = {8B450C25FF1FFCFF488B6C240848C1ED104881E5}
      $op2 = {CCCCCCCCCCCCCCCCCCCCCCCC4881EC?80?000048}
   condition:
      uint16(0) == 0x5a4d and all of them
 }

rule win_icedid_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2020-12-22"
        version = "1"
        description = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.icedid"
        malpedia_rule_date = "20201222"
        malpedia_hash = "30354d830a29f0fbd3714d93d94dea941d77a130"
        malpedia_version = "20201023"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { ff7500 56 ff15???????? 50 }
            // n = 4, score = 1400
            //   ff7500               | push                dword ptr [ebp]
            //   56                   | push                esi
            //   ff15????????         |                     
            //   50                   | push                eax

        $sequence_1 = { ff15???????? 8bf7 8bc6 eb02 33c0 5f 5e }
            // n = 7, score = 1300
            //   ff15????????         |                     
            //   8bf7                 | mov                 esi, edi
            //   8bc6                 | mov                 eax, esi
            //   eb02                 | jmp                 4
            //   33c0                 | xor                 eax, eax
            //   5f                   | pop                 edi
            //   5e                   | pop                 esi

        $sequence_2 = { 6a00 ff15???????? 50 ff15???????? 8bc6 eb02 }
            // n = 6, score = 1300
            //   6a00                 | push                0
            //   ff15????????         |                     
            //   50                   | push                eax
            //   ff15????????         |                     
            //   8bc6                 | mov                 eax, esi
            //   eb02                 | jmp                 4

        $sequence_3 = { 56 57 ff15???????? 50 ff15???????? 8bf7 8bc6 }
            // n = 7, score = 1300
            //   56                   | push                esi
            //   57                   | push                edi
            //   ff15????????         |                     
            //   50                   | push                eax
            //   ff15????????         |                     
            //   8bf7                 | mov                 esi, edi
            //   8bc6                 | mov                 eax, esi

        $sequence_4 = { 0fb605???????? 50 0fb705???????? 50 51 }
            // n = 5, score = 1300
            //   0fb605????????       |                     
            //   50                   | push                eax
            //   0fb705????????       |                     
            //   50                   | push                eax
            //   51                   | push                ecx

        $sequence_5 = { 742c 803e00 7427 6a3b 56 ff15???????? 8bf8 }
            // n = 7, score = 1300
            //   742c                 | je                  0x2e
            //   803e00               | cmp                 byte ptr [esi], 0
            //   7427                 | je                  0x29
            //   6a3b                 | push                0x3b
            //   56                   | push                esi
            //   ff15????????         |                     
            //   8bf8                 | mov                 edi, eax

        $sequence_6 = { ff15???????? 50 ff15???????? 8bf0 85f6 7502 }
            // n = 6, score = 1300
            //   ff15????????         |                     
            //   50                   | push                eax
            //   ff15????????         |                     
            //   8bf0                 | mov                 esi, eax
            //   85f6                 | test                esi, esi
            //   7502                 | jne                 4

        $sequence_7 = { be01000080 50 56 ff15???????? }
            // n = 4, score = 1300
            //   be01000080           | mov                 esi, 0x80000001
            //   50                   | push                eax
            //   56                   | push                esi
            //   ff15????????         |                     

        $sequence_8 = { 0fbec0 03c8 46 8a06 }
            // n = 4, score = 1200
            //   0fbec0               | movsx               eax, al
            //   03c8                 | add                 ecx, eax
            //   46                   | inc                 esi
            //   8a06                 | mov                 al, byte ptr [esi]

        $sequence_9 = { 50 ff15???????? eb0b 6a08 }
            // n = 4, score = 1200
            //   50                   | push                eax
            //   ff15????????         |                     
            //   eb0b                 | jmp                 0xd
            //   6a08                 | push                8

        $sequence_10 = { e8???????? 8bf0 8d45fc 50 ff75fc 6a05 }
            // n = 6, score = 1000
            //   e8????????           |                     
            //   8bf0                 | mov                 esi, eax
            //   8d45fc               | lea                 eax, [ebp - 4]
            //   50                   | push                eax
            //   ff75fc               | push                dword ptr [ebp - 4]
            //   6a05                 | push                5

        $sequence_11 = { 8d4c2414 51 ff33 50 57 ff15???????? }
            // n = 6, score = 1000
            //   8d4c2414             | lea                 ecx, [esp + 0x14]
            //   51                   | push                ecx
            //   ff33                 | push                dword ptr [ebx]
            //   50                   | push                eax
            //   57                   | push                edi
            //   ff15????????         |                     

        $sequence_12 = { 740e 56 6a08 ffd3 50 ff15???????? }
            // n = 6, score = 900
            //   740e                 | je                  0x10
            //   56                   | push                esi
            //   6a08                 | push                8
            //   ffd3                 | call                ebx
            //   50                   | push                eax
            //   ff15????????         |                     

        $sequence_13 = { 8d5808 0fb713 8954241c 66c16c241c0c 0fb7d2 }
            // n = 5, score = 800
            //   8d5808               | lea                 ebx, [eax + 8]
            //   0fb713               | movzx               edx, word ptr [ebx]
            //   8954241c             | mov                 dword ptr [esp + 0x1c], edx
            //   66c16c241c0c         | shr                 word ptr [esp + 0x1c], 0xc
            //   0fb7d2               | movzx               edx, dx

        $sequence_14 = { 0132 47 83c302 3bfd }
            // n = 4, score = 800
            //   0132                 | add                 dword ptr [edx], esi
            //   47                   | inc                 edi
            //   83c302               | add                 ebx, 2
            //   3bfd                 | cmp                 edi, ebp

        $sequence_15 = { 3bfd 72c4 8b542414 0302 833800 759f }
            // n = 6, score = 800
            //   3bfd                 | cmp                 edi, ebp
            //   72c4                 | jb                  0xffffffc6
            //   8b542414             | mov                 edx, dword ptr [esp + 0x14]
            //   0302                 | add                 eax, dword ptr [edx]
            //   833800               | cmp                 dword ptr [eax], 0
            //   759f                 | jne                 0xffffffa1

        $sequence_16 = { 397820 7633 53 8bdf }
            // n = 4, score = 800
            //   397820               | cmp                 dword ptr [eax + 0x20], edi
            //   7633                 | jbe                 0x35
            //   53                   | push                ebx
            //   8bdf                 | mov                 ebx, edi

        $sequence_17 = { 8d5b11 83c414 47 3b7820 72d1 5b 33c0 }
            // n = 7, score = 800
            //   8d5b11               | lea                 ebx, [ebx + 0x11]
            //   83c414               | add                 esp, 0x14
            //   47                   | inc                 edi
            //   3b7820               | cmp                 edi, dword ptr [eax + 0x20]
            //   72d1                 | jb                  0xffffffd3
            //   5b                   | pop                 ebx
            //   33c0                 | xor                 eax, eax

        $sequence_18 = { 8b12 85d2 7454 8d6af8 d1ed 6a00 5f }
            // n = 7, score = 800
            //   8b12                 | mov                 edx, dword ptr [edx]
            //   85d2                 | test                edx, edx
            //   7454                 | je                  0x56
            //   8d6af8               | lea                 ebp, [edx - 8]
            //   d1ed                 | shr                 ebp, 1
            //   6a00                 | push                0
            //   5f                   | pop                 edi

        $sequence_19 = { 6a1f 53 ff15???????? 8b4608 6a00 ff7618 }
            // n = 6, score = 700
            //   6a1f                 | push                0x1f
            //   53                   | push                ebx
            //   ff15????????         |                     
            //   8b4608               | mov                 eax, dword ptr [esi + 8]
            //   6a00                 | push                0
            //   ff7618               | push                dword ptr [esi + 0x18]

        $sequence_20 = { 8d442410 8364241000 50 53 ff15???????? }
            // n = 5, score = 700
            //   8d442410             | lea                 eax, [esp + 0x10]
            //   8364241000           | and                 dword ptr [esp + 0x10], 0
            //   50                   | push                eax
            //   53                   | push                ebx
            //   ff15????????         |                     

        $sequence_21 = { ff7604 51 52 ff15???????? }
            // n = 4, score = 700
            //   ff7604               | push                dword ptr [esi + 4]
            //   51                   | push                ecx
            //   52                   | push                edx
            //   ff15????????         |                     

        $sequence_22 = { ff7608 53 ff15???????? 85c0 }
            // n = 4, score = 700
            //   ff7608               | push                dword ptr [esi + 8]
            //   53                   | push                ebx
            //   ff15????????         |                     
            //   85c0                 | test                eax, eax

        $sequence_23 = { 8a4173 a808 75f5 a804 7406 }
            // n = 5, score = 400
            //   8a4173               | mov                 al, byte ptr [ecx + 0x73]
            //   a808                 | test                al, 8
            //   75f5                 | jne                 0xfffffff7
            //   a804                 | test                al, 4
            //   7406                 | je                  8

        $sequence_24 = { ff15???????? 85c0 750a b8010000c0 e9???????? }
            // n = 5, score = 400
            //   ff15????????         |                     
            //   85c0                 | test                eax, eax
            //   750a                 | jne                 0xc
            //   b8010000c0           | mov                 eax, 0xc0000001
            //   e9????????           |                     

        $sequence_25 = { ff5010 85c0 7407 33c0 }
            // n = 4, score = 400
            //   ff5010               | call                dword ptr [eax + 0x10]
            //   85c0                 | test                eax, eax
            //   7407                 | je                  9
            //   33c0                 | xor                 eax, eax

        $sequence_26 = { 7593 33ff 40 383b }
            // n = 4, score = 200
            //   7593                 | jne                 0xffffff95
            //   33ff                 | xor                 edi, edi
            //   40                   | inc                 eax
            //   383b                 | cmp                 byte ptr [ebx], bh

        $sequence_27 = { 41 57 48 83ec50 8be9 41 bd00000080 }
            // n = 7, score = 200
            //   41                   | inc                 ecx
            //   57                   | push                edi
            //   48                   | dec                 eax
            //   83ec50               | sub                 esp, 0x50
            //   8be9                 | mov                 ebp, ecx
            //   41                   | inc                 ecx
            //   bd00000080           | mov                 ebp, 0x80000000

        $sequence_28 = { 8b4110 33db 48 8bf9 395820 764b }
            // n = 6, score = 200
            //   8b4110               | mov                 eax, dword ptr [ecx + 0x10]
            //   33db                 | xor                 ebx, ebx
            //   48                   | dec                 eax
            //   8bf9                 | mov                 edi, ecx
            //   395820               | cmp                 dword ptr [eax + 0x20], ebx
            //   764b                 | jbe                 0x4d

        $sequence_29 = { ffc2 33d2 44 3b15???????? 72a7 48 }
            // n = 6, score = 200
            //   ffc2                 | inc                 edx
            //   33d2                 | xor                 edx, edx
            //   44                   | inc                 esp
            //   3b15????????         |                     
            //   72a7                 | jb                  0xffffffa9
            //   48                   | dec                 eax

        $sequence_30 = { 48 8d91db030000 48 8b89b9030000 eb0e }
            // n = 5, score = 200
            //   48                   | dec                 eax
            //   8d91db030000         | lea                 edx, [ecx + 0x3db]
            //   48                   | dec                 eax
            //   8b89b9030000         | mov                 ecx, dword ptr [ecx + 0x3b9]
            //   eb0e                 | jmp                 0x10

    condition:
        7 of them and filesize < 303104
}

rule fake_gzip_bokbot_202104
{
meta:
        author = "Thomas Barabosch, Telekom Security"
        date = "2021-04-20"
        description = "fake gzip provided by CC"
strings:
        $gzip = {1f 8b 08 08 00 00 00 00 00 00 75 70 64 61 74 65}
condition:
        $gzip at 0
}


rule win_iceid_gzip_ldr_202104 {
   meta:
      author = "Thomas Barabosch, Telekom Security"
      date = "2021-04-12"
      description = "2021 initial Bokbot / Icedid loader for fake GZIP payloads"
   strings:
      $internal_name = "loader_dll_64.dll" fullword

      $string0 = "_gat=" wide
      $string1 = "_ga=" wide
      $string2 = "_gid=" wide
      $string3 = "_u=" wide
      $string4 = "_io=" wide
      $string5 = "GetAdaptersInfo" fullword
      $string6 = "WINHTTP.dll" fullword
      $string7 = "DllRegisterServer" fullword
      $string8 = "PluginInit" fullword
      $string9 = "POST" wide fullword
      $string10 = "aws.amazon.com" wide fullword
   condition:
      uint16(0) == 0x5a4d and
      filesize < 5000KB and 
      ( $internal_name or all of ($s*) )
      or all of them
}

rule win_iceid_core_ldr_202104 {
   meta:
        author = "Thomas Barabosch, Telekom Security"
        date = "2021-04-13"
        description = "2021 loader for Bokbot / Icedid core (license.dat)"
   strings:
        $internal_name = "sadl_64.dll" fullword

        $string0 = "GetCommandLineA" fullword
        $string1 = "LoadLibraryA" fullword
        $string2 = "ProgramData" fullword
        $string3 = "SHLWAPI.dll" fullword
        $string4 = "SHGetFolderPathA" fullword
        $string5 = "DllRegisterServer" fullword
        $string6 = "update" fullword
        $string7 = "SHELL32.dll" fullword
        $string8 = "CreateThread" fullword
   condition:
      uint16(0) == 0x5a4d and
      filesize < 5000KB and 
      ( $internal_name or all of ($s*) )
      or all of them
}

rule win_iceid_core_202104 {
   meta:
      author = "Thomas Barabosch, Telekom Security"
      date = "2021-04-12"
      description = "2021 Bokbot / Icedid core"
   strings:
      $internal_name = "fixed_loader64.dll" fullword

      $string0 = "mail_vault" wide fullword
      $string1 = "ie_reg" wide fullword
      $string2 = "outlook" wide fullword
      $string3 = "user_num" wide fullword
      $string4 = "cred" wide fullword
      $string5 = "Authorization: Basic" fullword
      $string6 = "VaultOpenVault" fullword
      $string7 = "sqlite3_free" fullword
      $string8 = "cookie.tar" fullword
      $string9 = "DllRegisterServer" fullword
      $string10 = "PT0S" wide
   condition:
      uint16(0) == 0x5a4d and
      filesize < 5000KB and 
      ( $internal_name or all of ($s*) )
      or all of them
}
