rule win_socelars_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2020-12-01"
        version = "1"
        description = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.5.0"
        tool_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.socelars"
        malpedia_rule_date = "20201127"
        malpedia_hash = "ae61de407d8ec67cdbe44187237e174f42b42c47"
        malpedia_version = ""
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 0f85e1000000 8bd6 8bf1 83ee04 7211 8b08 3b0a }
            // n = 7, score = 100
            //   0f85e1000000         | jne                 0xe7
            //   8bd6                 | mov                 edx, esi
            //   8bf1                 | mov                 esi, ecx
            //   83ee04               | sub                 esi, 4
            //   7211                 | jb                  0x13
            //   8b08                 | mov                 ecx, dword ptr [eax]
            //   3b0a                 | cmp                 ecx, dword ptr [edx]

        $sequence_1 = { 8d4de4 e8???????? 8b4514 50 8b4d08 51 8d4de4 }
            // n = 7, score = 100
            //   8d4de4               | lea                 ecx, [ebp - 0x1c]
            //   e8????????           |                     
            //   8b4514               | mov                 eax, dword ptr [ebp + 0x14]
            //   50                   | push                eax
            //   8b4d08               | mov                 ecx, dword ptr [ebp + 8]
            //   51                   | push                ecx
            //   8d4de4               | lea                 ecx, [ebp - 0x1c]

        $sequence_2 = { e8???????? 83c414 ba0b000000 e9???????? ff7510 8b00 8d4c2414 }
            // n = 7, score = 100
            //   e8????????           |                     
            //   83c414               | add                 esp, 0x14
            //   ba0b000000           | mov                 edx, 0xb
            //   e9????????           |                     
            //   ff7510               | push                dword ptr [ebp + 0x10]
            //   8b00                 | mov                 eax, dword ptr [eax]
            //   8d4c2414             | lea                 ecx, [esp + 0x14]

        $sequence_3 = { ba0b000000 e9???????? 68???????? 8bbd10feffff 57 e8???????? 83c408 }
            // n = 7, score = 100
            //   ba0b000000           | mov                 edx, 0xb
            //   e9????????           |                     
            //   68????????           |                     
            //   8bbd10feffff         | mov                 edi, dword ptr [ebp - 0x1f0]
            //   57                   | push                edi
            //   e8????????           |                     
            //   83c408               | add                 esp, 8

        $sequence_4 = { c744245400000000 c744247800000000 c784248400000000000000 c744247400000000 89442444 0f85ce130000 80784900 }
            // n = 7, score = 100
            //   c744245400000000     | mov                 dword ptr [esp + 0x54], 0
            //   c744247800000000     | mov                 dword ptr [esp + 0x78], 0
            //   c784248400000000000000     | mov    dword ptr [esp + 0x84], 0
            //   c744247400000000     | mov                 dword ptr [esp + 0x74], 0
            //   89442444             | mov                 dword ptr [esp + 0x44], eax
            //   0f85ce130000         | jne                 0x13d4
            //   80784900             | cmp                 byte ptr [eax + 0x49], 0

        $sequence_5 = { e9???????? c745dc03000000 eb7c c745e070ea4d00 ebbb d9e8 8b4510 }
            // n = 7, score = 100
            //   e9????????           |                     
            //   c745dc03000000       | mov                 dword ptr [ebp - 0x24], 3
            //   eb7c                 | jmp                 0x7e
            //   c745e070ea4d00       | mov                 dword ptr [ebp - 0x20], 0x4dea70
            //   ebbb                 | jmp                 0xffffffbd
            //   d9e8                 | fld1                
            //   8b4510               | mov                 eax, dword ptr [ebp + 0x10]

        $sequence_6 = { c7431000000000 e8???????? 8bc8 83c404 85c9 747d 807e4900 }
            // n = 7, score = 100
            //   c7431000000000       | mov                 dword ptr [ebx + 0x10], 0
            //   e8????????           |                     
            //   8bc8                 | mov                 ecx, eax
            //   83c404               | add                 esp, 4
            //   85c9                 | test                ecx, ecx
            //   747d                 | je                  0x7f
            //   807e4900             | cmp                 byte ptr [esi + 0x49], 0

        $sequence_7 = { 8d0486 5f 5e 5b 8be5 5d c3 }
            // n = 7, score = 100
            //   8d0486               | lea                 eax, [esi + eax*4]
            //   5f                   | pop                 edi
            //   5e                   | pop                 esi
            //   5b                   | pop                 ebx
            //   8be5                 | mov                 esp, ebp
            //   5d                   | pop                 ebp
            //   c3                   | ret                 

        $sequence_8 = { e8???????? 83c414 ebb3 8b45b8 bb0a000000 833800 0f455da0 }
            // n = 7, score = 100
            //   e8????????           |                     
            //   83c414               | add                 esp, 0x14
            //   ebb3                 | jmp                 0xffffffb5
            //   8b45b8               | mov                 eax, dword ptr [ebp - 0x48]
            //   bb0a000000           | mov                 ebx, 0xa
            //   833800               | cmp                 dword ptr [eax], 0
            //   0f455da0             | cmovne              ebx, dword ptr [ebp - 0x60]

        $sequence_9 = { 897c243c 8b4010 03c8 c744244c1ca84e00 8b01 89442448 8b410c }
            // n = 7, score = 100
            //   897c243c             | mov                 dword ptr [esp + 0x3c], edi
            //   8b4010               | mov                 eax, dword ptr [eax + 0x10]
            //   03c8                 | add                 ecx, eax
            //   c744244c1ca84e00     | mov                 dword ptr [esp + 0x4c], 0x4ea81c
            //   8b01                 | mov                 eax, dword ptr [ecx]
            //   89442448             | mov                 dword ptr [esp + 0x48], eax
            //   8b410c               | mov                 eax, dword ptr [ecx + 0xc]

    condition:
        7 of them and filesize < 2151424
}

rule TrojanSpy_Socelars_July_31 {
   meta:
      description = "TrojanSpy.Socelars"
      author = "LightDefender"
      date = "2021-07-31"
   strings:
      $op1 = {558BEC83EC28B8010000006BC8078A917C815100}
      $op2 = {8B450C8B4D108B14BD104054008910C740040000}
      $op3 = {4681FE000100007CBF8B7508C60500415400010F}
      $op4 = {558BEC6AFF680D15500064A1000000005083EC44}
      $op5 = {558BEC515356578BF985FF7515FF750CFF7508E8}
      $op6 = {CCCCCCCCCCCCCCCCCCCCCCCCCCCCCC558BEC6A00}
      $op7 = {83EC085356578BF98955FC8B5F048BC3995250E8}
   condition:
      uint16(0) == 0x5a4d and all of them
 }

rule MALWARE_Win_CookieStealer {
    meta:
        author = "ditekSHen"
        description = "Detects generic cookie stealer"
    strings:
        $s1 = "([\\S]+?)=([^;|^\\r|^\\n]+)" fullword ascii
        $s2 = "(.+?): ([^;|^\\r|^\\n]+)" fullword ascii
        $s3 = "Set-Cookie: ([^\\r|^\\n]+)" fullword ascii
        $s4 = "cmd.exe /c taskkill /f /im chrome.exe" fullword ascii
        $s5 = "FIREFOX.EXE|Google Chrome|IEXPLORE.EXE" ascii
        $pdb1 = "F:\\facebook_svn\\trunk\\database\\Release\\DiskScan.pdb" fullword ascii
        $pdb2 = "D:\\Projects\\crxinstall\\trunk\\Release\\spoofpref.pdb" fullword ascii
        $ua1 = "Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/64.0.3282.140 Safari/537.36" fullword ascii
        $ua2 = "Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/73.0.3683.86 Safari/537.36" fullword ascii
    condition:
        uint16(0) == 0x5a4d and ((all of ($s*) and 1 of ($pdb*) and 1 of ($ua*)) or (all of ($ua*) and 1 of ($pdb*) and 2 of ($s*)))
}
