// From Malpedia
rule win_formbook_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2020-12-22"
        version = "1"
        description = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.formbook"
        malpedia_rule_date = "20201222"
        malpedia_hash = "30354d830a29f0fbd3714d93d94dea941d77a130"
        malpedia_version = "20201023"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { e8???????? 83c410 66833e00 750e 6a00 6a03 56 }
            // n = 7, score = 1400
            //   e8????????           |                     
            //   83c410               | add                 esp, 0x10
            //   66833e00             | cmp                 word ptr [esi], 0
            //   750e                 | jne                 0x10
            //   6a00                 | push                0
            //   6a03                 | push                3
            //   56                   | push                esi

        $sequence_1 = { e8???????? 8b06 50 57 e8???????? }
            // n = 5, score = 1400
            //   e8????????           |                     
            //   8b06                 | mov                 eax, dword ptr [esi]
            //   50                   | push                eax
            //   57                   | push                edi
            //   e8????????           |                     

        $sequence_2 = { 41 4e 75ed 53 8b5d10 3bda 775b }
            // n = 7, score = 1400
            //   41                   | inc                 ecx
            //   4e                   | dec                 esi
            //   75ed                 | jne                 0xffffffef
            //   53                   | push                ebx
            //   8b5d10               | mov                 ebx, dword ptr [ebp + 0x10]
            //   3bda                 | cmp                 ebx, edx
            //   775b                 | ja                  0x5d

        $sequence_3 = { 72d2 8b5d0c 47 3b7dd8 72b9 8d45f4 50 }
            // n = 7, score = 1400
            //   72d2                 | jb                  0xffffffd4
            //   8b5d0c               | mov                 ebx, dword ptr [ebp + 0xc]
            //   47                   | inc                 edi
            //   3b7dd8               | cmp                 edi, dword ptr [ebp - 0x28]
            //   72b9                 | jb                  0xffffffbb
            //   8d45f4               | lea                 eax, [ebp - 0xc]
            //   50                   | push                eax

        $sequence_4 = { 03c0 03c0 8bd1 2bd0 8a043a 888c0dfafeffff 88840df8fdffff }
            // n = 7, score = 1400
            //   03c0                 | add                 eax, eax
            //   03c0                 | add                 eax, eax
            //   8bd1                 | mov                 edx, ecx
            //   2bd0                 | sub                 edx, eax
            //   8a043a               | mov                 al, byte ptr [edx + edi]
            //   888c0dfafeffff       | mov                 byte ptr [ebp + ecx - 0x106], cl
            //   88840df8fdffff       | mov                 byte ptr [ebp + ecx - 0x208], al

        $sequence_5 = { e8???????? 83c404 85c0 740e 8d4df8 6a00 51 }
            // n = 7, score = 1400
            //   e8????????           |                     
            //   83c404               | add                 esp, 4
            //   85c0                 | test                eax, eax
            //   740e                 | je                  0x10
            //   8d4df8               | lea                 ecx, [ebp - 8]
            //   6a00                 | push                0
            //   51                   | push                ecx

        $sequence_6 = { 83c408 85c0 750f 8b36 394618 75e8 }
            // n = 6, score = 1400
            //   83c408               | add                 esp, 8
            //   85c0                 | test                eax, eax
            //   750f                 | jne                 0x11
            //   8b36                 | mov                 esi, dword ptr [esi]
            //   394618               | cmp                 dword ptr [esi + 0x18], eax
            //   75e8                 | jne                 0xffffffea

        $sequence_7 = { 8b4df8 83c602 8d1430 83c40c 3b54f904 72d2 8b5d0c }
            // n = 7, score = 1400
            //   8b4df8               | mov                 ecx, dword ptr [ebp - 8]
            //   83c602               | add                 esi, 2
            //   8d1430               | lea                 edx, [eax + esi]
            //   83c40c               | add                 esp, 0xc
            //   3b54f904             | cmp                 edx, dword ptr [ecx + edi*8 + 4]
            //   72d2                 | jb                  0xffffffd4
            //   8b5d0c               | mov                 ebx, dword ptr [ebp + 0xc]

        $sequence_8 = { 813c0150450000 75e6 8b5508 56 8902 8b703c }
            // n = 6, score = 1400
            //   813c0150450000       | cmp                 dword ptr [ecx + eax], 0x4550
            //   75e6                 | jne                 0xffffffe8
            //   8b5508               | mov                 edx, dword ptr [ebp + 8]
            //   56                   | push                esi
            //   8902                 | mov                 dword ptr [edx], eax
            //   8b703c               | mov                 esi, dword ptr [eax + 0x3c]

        $sequence_9 = { 55 8bec 8b5508 668b4510 8b4d0c 66894202 33c0 }
            // n = 7, score = 1400
            //   55                   | push                ebp
            //   8bec                 | mov                 ebp, esp
            //   8b5508               | mov                 edx, dword ptr [ebp + 8]
            //   668b4510             | mov                 ax, word ptr [ebp + 0x10]
            //   8b4d0c               | mov                 ecx, dword ptr [ebp + 0xc]
            //   66894202             | mov                 word ptr [edx + 2], ax
            //   33c0                 | xor                 eax, eax

    condition:
        7 of them and filesize < 352256
}

rule Formbook
{
    meta:
        author = "kevoreilly"
        description = "Formbook Anti-analysis Bypass"
        cape_options = "bp0=$remap_ntdll-25,action0=setedx:ntdll,count=0"
    strings:
        $remap_ntdll = {6A 00 6A 04 8D 4D ?? 51 6A 07 52 56 E8 [4] 8B 45 ?? 83 C4 20 3B 06 0F 95 C1 84 C9 74 0E 33 C0 B2 FF 00 54 30 ?? 40 83 F8 0D 72 F6}
    condition:
        ($remap_ntdll)
}

rule spy_formbook_june_15 {
   meta:
      description = "TrojanSpy.Formbook"
      author = "LightDefender"
      date = "2021-06-15"
   strings:
      $s1 = "ftpPassword" fullword ascii
      $s2 = "ftpUsername" fullword ascii
      $s3 = "ftpServer" fullword ascii
      $s4 = "ssPassword" fullword ascii
      $s5 = "btnFTPUpload" fullword ascii
      $s6 = "flickrauthtoken" fullword ascii
      $s7 = "flickruser" fullword ascii
      $s8 = "clipboardData4" fullword ascii
      $s9 = "clipboardData3" fullword ascii
      $s10 = "clipboardData2" fullword ascii
      $s11 = "clipboardData1" fullword ascii
      $s12 = "clipboardData0" fullword ascii
      $s13 = "ClipboardManager.Properties" fullword ascii
      $s14 = "ssUpload" fullword ascii
      $s15 = "Uploading" fullword wide
      $s16 = "noscrnshots" fullword wide
      $s17 = "Clipboard Memorizer is already running." fullword wide
      $s18 = "Screen Info" fullword wide
      $s19 = "Adam Lamers" fullword wide
      $s20 = "<Password></Password>" fullword wide
      $s21 = "Created By Adam Lamers 2009" fullword wide
      $s22 = {00 00 28 34 00 00 0A 0A 12 01 FE 15 1F 00 00 01}
      $s23 = {00 02 7B 79 00 00 04 04 6F F3 00 00 0A 6F F4 00}
      $s24 = {00 02 7B 29 00 00 04 02 7B 2D 00 00 04 6F 84 00}
      
      $x0 = "#GUID" ascii
      $x1 = "#Strings" ascii
      $x2 = "#Blob" ascii
      $x3 = "Microsoft.VisualBasic" ascii
      $x4 = "16.0.0.0" fullword ascii
   condition:
      ( uint16(0) == 0x5a4d and filesize < 2000KB and 7 of them) or ( all of them )
 }
