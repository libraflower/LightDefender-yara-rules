rule win_ccleaner_backdoor_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2021-06-10"
        version = "1"
        description = "Detects win.ccleaner_backdoor."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.ccleaner_backdoor"
        malpedia_rule_date = "20210604"
        malpedia_hash = "be09d5d71e77373c0f538068be31a2ad4c69cfbd"
        malpedia_version = "20210616"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 50 ff15???????? 8b3d???????? 59 ffd7 }
            // n = 5, score = 200
            //   50                   | push                eax
            //   ff15????????         |                     
            //   8b3d????????         |                     
            //   59                   | pop                 ecx
            //   ffd7                 | call                edi

        $sequence_1 = { 750a b857000780 e9???????? e8???????? }
            // n = 4, score = 200
            //   750a                 | jne                 0xc
            //   b857000780           | mov                 eax, 0x80070057
            //   e9????????           |                     
            //   e8????????           |                     

        $sequence_2 = { 012e 33c0 5f 5e 5d }
            // n = 5, score = 100
            //   012e                 | add                 dword ptr [esi], ebp
            //   33c0                 | xor                 eax, eax
            //   5f                   | pop                 edi
            //   5e                   | pop                 esi
            //   5d                   | pop                 ebp

        $sequence_3 = { 01442454 03d1 294c2450 8b4c2410 }
            // n = 4, score = 100
            //   01442454             | add                 dword ptr [esp + 0x54], eax
            //   03d1                 | add                 edx, ecx
            //   294c2450             | sub                 dword ptr [esp + 0x50], ecx
            //   8b4c2410             | mov                 ecx, dword ptr [esp + 0x10]

        $sequence_4 = { 50 8d45fc 50 8d45f0 50 8d45d0 50 }
            // n = 7, score = 100
            //   50                   | push                eax
            //   8d45fc               | lea                 eax, dword ptr [ebp - 4]
            //   50                   | push                eax
            //   8d45f0               | lea                 eax, dword ptr [ebp - 0x10]
            //   50                   | push                eax
            //   8d45d0               | lea                 eax, dword ptr [ebp - 0x30]
            //   50                   | push                eax

        $sequence_5 = { 03c0 894340 8b7340 418bc4 }
            // n = 4, score = 100
            //   03c0                 | add                 dword ptr [esi + 0xc], eax
            //   894340               | dec                 eax
            //   8b7340               | mov                 edi, dword ptr [edi]
            //   418bc4               | dec                 ecx

        $sequence_6 = { f7d8 1bc0 be00010000 59 23c6 }
            // n = 5, score = 100
            //   f7d8                 | neg                 eax
            //   1bc0                 | sbb                 eax, eax
            //   be00010000           | mov                 esi, 0x100
            //   59                   | pop                 ecx
            //   23c6                 | and                 eax, esi

        $sequence_7 = { e8???????? 8d45f8 53 50 56 895df8 e8???????? }
            // n = 7, score = 100
            //   e8????????           |                     
            //   8d45f8               | lea                 eax, dword ptr [ebp - 8]
            //   53                   | push                ebx
            //   50                   | push                eax
            //   56                   | push                esi
            //   895df8               | mov                 dword ptr [ebp - 8], ebx
            //   e8????????           |                     

        $sequence_8 = { 01461c 8b542424 85d2 7405 }
            // n = 4, score = 100
            //   01461c               | add                 dword ptr [esi + 0x1c], eax
            //   8b542424             | mov                 edx, dword ptr [esp + 0x24]
            //   85d2                 | test                edx, edx
            //   7405                 | je                  7

        $sequence_9 = { 3bc5 0f8219feffff 45 3822 }
            // n = 4, score = 100
            //   3bc5                 | mov                 ecx, dword ptr [edx]
            //   0f8219feffff         | dec                 eax
            //   45                   | mov                 eax, dword ptr [ecx]
            //   3822                 | call                dword ptr [eax + 8]

        $sequence_10 = { 01442418 03c8 8954242c 8b542470 }
            // n = 4, score = 100
            //   01442418             | add                 dword ptr [esp + 0x18], eax
            //   03c8                 | add                 ecx, eax
            //   8954242c             | mov                 dword ptr [esp + 0x2c], edx
            //   8b542470             | mov                 edx, dword ptr [esp + 0x70]

        $sequence_11 = { 00cc cc 4057 4883ec50 4533db }
            // n = 5, score = 100
            //   00cc                 | add                 ah, cl
            //   cc                   | int3                
            //   4057                 | inc                 eax
            //   4883ec50             | push                edi
            //   4533db               | dec                 eax

        $sequence_12 = { 03c6 4863d0 4c8d0c12 4c8d4718 }
            // n = 4, score = 100
            //   03c6                 | int3                
            //   4863d0               | dec                 eax
            //   4c8d0c12             | mov                 dword ptr [esp + 8], ebx
            //   4c8d4718             | push                edi

        $sequence_13 = { 01cc cc 48895c2408 57 }
            // n = 4, score = 100
            //   01cc                 | lock xadd           dword ptr [edx + 0x10], eax
            //   cc                   | add                 dword ptr [esi + 0xc], eax
            //   48895c2408           | dec                 eax
            //   57                   | mov                 edi, dword ptr [edi]

        $sequence_14 = { ff15???????? 46 83fe3c 7cd0 33c0 }
            // n = 5, score = 100
            //   ff15????????         |                     
            //   46                   | add                 eax, esi
            //   83fe3c               | test                eax, eax
            //   7cd0                 | jg                  0xd
            //   33c0                 | dec                 eax

        $sequence_15 = { 53 53 8d45e4 6a10 50 53 }
            // n = 6, score = 100
            //   53                   | push                ebx
            //   53                   | push                ebx
            //   8d45e4               | lea                 eax, dword ptr [ebp - 0x1c]
            //   6a10                 | push                0x10
            //   50                   | push                eax
            //   53                   | push                ebx

        $sequence_16 = { 013e 33c0 8b16 83c410 }
            // n = 4, score = 100
            //   013e                 | add                 dword ptr [esi], edi
            //   33c0                 | xor                 eax, eax
            //   8b16                 | mov                 edx, dword ptr [esi]
            //   83c410               | add                 esp, 0x10

        $sequence_17 = { 47 8a07 8802 42 47 4e 75f7 }
            // n = 7, score = 100
            //   47                   | mov                 ecx, dword ptr [edx]
            //   8a07                 | dec                 eax
            //   8802                 | mov                 eax, dword ptr [ecx]
            //   42                   | call                dword ptr [eax + 8]
            //   47                   | dec                 eax
            //   4e                   | mov                 ecx, dword ptr [ebx + 0x28]
            //   75f7                 | add                 eax, esi

        $sequence_18 = { 8bda 6a04 2bdf 58 3bd8 }
            // n = 5, score = 100
            //   8bda                 | test                eax, eax
            //   6a04                 | jg                  0xd
            //   2bdf                 | dec                 eax
            //   58                   | mov                 ecx, dword ptr [edx]
            //   3bd8                 | dec                 eax

        $sequence_19 = { 85c0 8d45c4 59 7508 8818 40 49 }
            // n = 7, score = 100
            //   85c0                 | test                eax, eax
            //   8d45c4               | lea                 eax, dword ptr [ebp - 0x3c]
            //   59                   | pop                 ecx
            //   7508                 | jne                 0xa
            //   8818                 | mov                 byte ptr [eax], bl
            //   40                   | inc                 eax
            //   49                   | dec                 ecx

        $sequence_20 = { 013d???????? 8b04b5d8970210 0500080000 3bc8 }
            // n = 4, score = 100
            //   013d????????         |                     
            //   8b04b5d8970210       | mov                 eax, dword ptr [esi*4 + 0x100297d8]
            //   0500080000           | add                 eax, 0x800
            //   3bc8                 | cmp                 ecx, eax

        $sequence_21 = { 00cc cc 4883ec28 488b11 }
            // n = 4, score = 100
            //   00cc                 | add                 ah, cl
            //   cc                   | int3                
            //   4883ec28             | inc                 eax
            //   488b11               | push                edi

        $sequence_22 = { 01460c 488b3f 493bfc 0f8554ffffff }
            // n = 4, score = 100
            //   01460c               | dec                 eax
            //   488b3f               | mov                 edx, dword ptr [ecx]
            //   493bfc               | dec                 eax
            //   0f8554ffffff         | sub                 edx, 0x18

        $sequence_23 = { 8d45fc 50 8d45f4 50 8d45d4 }
            // n = 5, score = 100
            //   8d45fc               | lea                 eax, dword ptr [ebp - 4]
            //   50                   | push                eax
            //   8d45f4               | lea                 eax, dword ptr [ebp - 0xc]
            //   50                   | push                eax
            //   8d45d4               | lea                 eax, dword ptr [ebp - 0x2c]

        $sequence_24 = { 1bc0 8d8de0feffff 40 ba00010000 c60100 41 4a }
            // n = 7, score = 100
            //   1bc0                 | sbb                 eax, eax
            //   8d8de0feffff         | lea                 ecx, dword ptr [ebp - 0x120]
            //   40                   | inc                 eax
            //   ba00010000           | mov                 edx, 0x100
            //   c60100               | mov                 byte ptr [ecx], 0
            //   41                   | inc                 ecx
            //   4a                   | dec                 edx

        $sequence_25 = { 33c0 e9???????? 8d442404 50 68???????? ff742418 }
            // n = 6, score = 100
            //   33c0                 | add                 eax, esi
            //   e9????????           |                     
            //   8d442404             | test                eax, eax
            //   50                   | jg                  0xd
            //   68????????           |                     
            //   ff742418             | dec                 eax

        $sequence_26 = { 03c6 85c0 7f09 488b0a }
            // n = 4, score = 100
            //   03c6                 | mov                 eax, esp
            //   85c0                 | add                 eax, eax
            //   7f09                 | mov                 dword ptr [ebx + 0x40], eax
            //   488b0a               | mov                 esi, dword ptr [ebx + 0x40]

        $sequence_27 = { 01442424 eb30 8b4508 897518 }
            // n = 4, score = 100
            //   01442424             | add                 dword ptr [esp + 0x24], eax
            //   eb30                 | jmp                 0x32
            //   8b4508               | mov                 eax, dword ptr [ebp + 8]
            //   897518               | mov                 dword ptr [ebp + 0x18], esi

        $sequence_28 = { ffd7 33ff 8bd8 397df8 7407 }
            // n = 5, score = 100
            //   ffd7                 | jg                  0xd
            //   33ff                 | dec                 eax
            //   8bd8                 | mov                 ecx, dword ptr [edx]
            //   397df8               | dec                 eax
            //   7407                 | mov                 eax, dword ptr [ecx]

        $sequence_29 = { ff75f8 68???????? 6a03 6a00 68???????? }
            // n = 5, score = 100
            //   ff75f8               | mov                 eax, dword ptr [ecx]
            //   68????????           |                     
            //   6a03                 | call                dword ptr [eax + 8]
            //   6a00                 | dec                 eax
            //   68????????           |                     

    condition:
        7 of them and filesize < 377856
}
